{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK\/RpcRequest","preciseIdentifier":"s:11HeadlessSDK10RpcRequestV","text":"RpcRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK\/WalletRpcResponseData","preciseIdentifier":"s:11HeadlessSDK21WalletRpcResponseDataV","text":"WalletRpcResponseData"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"Returns","level":1,"type":"heading","text":"Returns"},{"type":"codeListing","syntax":null,"code":["   Returns Any which is either a String or Dictionary"]},{"anchor":"Code","level":1,"type":"heading","text":"Code"},{"type":"codeListing","syntax":null,"code":["do {","    let response = try await request(","        Request(","            method: \"personal_sign\",","            params: [\"insert-message\", \"insert-embedded-wallet-address\"]","        )","    )","    let response = try await provider.request(","        RpcRequest(","            method: \"personal_sign\",","            params: [\"insert-message\", \"insert-embedded-wallet-address\"]","        )","    )","} catch {","    print(error)","}","","struct Param: Codable {","    let types: ParamTypes","    let primaryType: String","    let domain: Domain","    let message: Message","}","struct ParamTypes: Codable {","    let eIP712Domain: [DomainType]","    let person: [DomainType]","    let mail: [DomainType]","","    enum CodingKeys: String, CodingKey {","        case eIP712Domain = \"EIP712Domain\"","        case person = \"Person\"","        case mail = \"Mail\"","    }","}","struct DomainType: Codable {","    let name: String","    let type: String","}","struct Domain: Codable {","    let name: String","    let version: String","    let chainId: Int","    let verifyingContract: String","}","struct Message: Codable {","    struct W: Codable {","        let name: String","        let wallet: String","    }","","    let from: W","    let to: W","    let contents: String","}","","let eIP712Domain = [","    DomainType(name: \"name\", type: \"string\"),","    DomainType(name: \"version\", type: \"string\"),","    DomainType(name: \"chainId\", type: \"uint256\"),","    DomainType(name: \"verifyingContract\", type: \"address\"),","]","let person = [","    DomainType(name: \"name\", type: \"string\"),","    DomainType(name: \"wallet\", type: \"address\")","]","let mail = [","    DomainType(name: \"from\", type: \"Person\"),","    DomainType(name: \"to\", type: \"Person\"),","    DomainType(name: \"contents\", type: \"string\"),","]","let types = ParamTypes(eIP712Domain: eIP712Domain, person: person, mail: mail)","let primaryType = \"Mail\"","let domain = Domain(name: \"Ether Mail\", version: \"1\", chainId: 1, verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\")","let to = Message.W(name: \"Bob\", wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\")","let from = Message.W(name: \"Cow\", wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\")","let contents = \"Hello, Bob!\"","let message = Message(from: from, to: to, contents: contents)","let param = Param(types: types, primaryType: primaryType, domain: domain, message: message)","","let encodedParam = try JSONEncoder().encode(param)","guard let paramJsonString = String(data: encodedParam, encoding: .utf8) else {","    throw PrivyError.dataParse","}","","let response = try await provider.request(","    RpcRequest(","        method: \"eth_signTypedData_v4\",","        params: [provider.address, paramJsonString]","    )",")","return response.data"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/headlesssdk\/embeddedwalletprovider\/request(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK\/EmbeddedWalletProvider\/request(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Ethereum provider RPC request"}],"kind":"symbol","metadata":{"role":"symbol","title":"request(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RpcRequest","preciseIdentifier":"s:11HeadlessSDK10RpcRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"WalletRpcResponseData","preciseIdentifier":"s:11HeadlessSDK21WalletRpcResponseDataV"}],"symbolKind":"method","externalID":"s:11HeadlessSDK22EmbeddedWalletProviderC7requestyAA0D15RpcResponseDataVAA0G7RequestVYaKF","extendedModule":"HeadlessSDK","modules":[{"name":"HeadlessSDK"}]},"hierarchy":{"paths":[["doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK","doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK\/EmbeddedWalletProvider"]]},"references":{"doc://io.privy.HeadlessSDK/documentation/HeadlessSDK":{"role":"collection","title":"HeadlessSDK","abstract":[],"identifier":"doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK","kind":"symbol","type":"topic","url":"\/documentation\/headlesssdk"},"doc://io.privy.HeadlessSDK/documentation/HeadlessSDK/EmbeddedWalletProvider":{"role":"symbol","title":"EmbeddedWalletProvider","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedWalletProvider"}],"abstract":[{"type":"text","text":"Represents the current connection state and available functionality for the userâ€™s Privy embedded wallet associated with the current application"}],"identifier":"doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK\/EmbeddedWalletProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EmbeddedWalletProvider"}],"url":"\/documentation\/headlesssdk\/embeddedwalletprovider"},"doc://io.privy.HeadlessSDK/documentation/HeadlessSDK/RpcRequest":{"role":"symbol","title":"RpcRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RpcRequest"}],"abstract":[{"type":"text","text":"Request made on behalf of the embedded wallet for the logged in user"}],"identifier":"doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK\/RpcRequest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RpcRequest"}],"url":"\/documentation\/headlesssdk\/rpcrequest"},"doc://io.privy.HeadlessSDK/documentation/HeadlessSDK/EmbeddedWalletProvider/request(_:)":{"role":"symbol","title":"request(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RpcRequest","preciseIdentifier":"s:11HeadlessSDK10RpcRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"WalletRpcResponseData","preciseIdentifier":"s:11HeadlessSDK21WalletRpcResponseDataV"}],"abstract":[{"type":"text","text":"The Ethereum provider RPC request"}],"identifier":"doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK\/EmbeddedWalletProvider\/request(_:)","kind":"symbol","type":"topic","url":"\/documentation\/headlesssdk\/embeddedwalletprovider\/request(_:)"},"doc://io.privy.HeadlessSDK/documentation/HeadlessSDK/WalletRpcResponseData":{"role":"symbol","title":"WalletRpcResponseData","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WalletRpcResponseData"}],"abstract":[],"identifier":"doc:\/\/io.privy.HeadlessSDK\/documentation\/HeadlessSDK\/WalletRpcResponseData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WalletRpcResponseData"}],"url":"\/documentation\/headlesssdk\/walletrpcresponsedata"}}}